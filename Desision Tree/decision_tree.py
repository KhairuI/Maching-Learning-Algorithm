# -*- coding: utf-8 -*-
"""Decision Tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VEQqN7_tmjHOdGPBb4kl9TCGmxCDmgsr

In this algorithm predict a product buy or not based on age, income, gender,material status by Decision Tree
"""

# Commented out IPython magic to ensure Python compatibility.
# import library..
import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.tree import DecisionTreeClassifier, export_graphviz
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
from sklearn.datasets import load_iris
from sklearn import tree
import graphviz

from google.colab import files
files.upload()

# read the data set 
myFile= pd.read_csv('shop data.csv')

myFile

"""Seperate the columns..."""

x= myFile.iloc[:,:-1]

x

y= myFile.iloc[:,4]

y

lebel= LabelEncoder()

"""Now lebel all the column in x"""

x= x.apply(LabelEncoder().fit_transform)

"""Here program assume that 
01. for age: <25=1, 25-35=0, <35=2
02. for income high=0, medium= 2, low= 1
03. for material status single=1, married=0
04. for gender male=1, female=0
"""

x

d_tree= DecisionTreeClassifier()

d_tree.fit(x.iloc[:,0:4],y)

x_input= np.array([0,2,1,1])

y_predict= d_tree.predict([x_input])

"""Here predict a result"""

y_predict

"""**Here Generate the tree**





"""

iris= load_iris()

my_data= pd.read_csv('shop data.csv')

my_data.head()

x

y

# import the library
from sklearn.model_selection import train_test_split

"""Traning the data..."""

# traning and testing the data set....
xtrain, xtest, ytrain, ytest= train_test_split(x,y, test_size= 0.20, random_state=101)

dt_model= DecisionTreeClassifier()

dt_model.fit(xtrain,ytrain)

"""Now check accuracy..."""

print(f'Traning Accuracy - : {dt_model.score(xtrain,ytrain)*100:.3f} %')
print(f'Testing Accuracy - : {dt_model.score(xtest,ytest)*100:.3f} %')

"""Now generate the tree..."""

dot_data= export_graphviz(dt_model, max_depth=3, out_file=None, feature_names=x.columns,class_names=['Yes','No'],filled=True,rounded=True,special_characters=True)

graph= graphviz.Source(dot_data)

graph